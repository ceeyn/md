global:                             #全局配置
  namespace: Development            #环境类型，分正式production和非正式development两种类型
  env_name: Test                    #海外正式环境

server:                                            #服务端配置
  app: wemeet                                        #业务的应用名
  server: meeting_template                             #进程服务名
  bin_path: /usr/local/trpc/bin/                   #二进制可执行文件和框架配置文件所在路径
  conf_path: /usr/local/trpc/conf/                 #业务配置文件所在路径
  data_path: /usr/local/trpc/data/                 #业务数据文件所在路径
  filter:                                          #针对所有service处理函数前后的拦截器列表
    - recovery                                     #拦截框架创建的业务处理协程panic
    - logger                                       #会议业务插件，强制必须引入，如果过滤器 logger 有冲突，引入v0.1.10以上的sdk，这里配置为 wemeetlogger
    - cm
  service:                                         #业务服务提供的service，可以有多个
    - name: trpc.wemeet.wemeet_template.oidb      #service的路由名称
      #ip: 127.0.0.1                            #服务监听ip地址 可使用占位符,ip和nic二选一，优先ip
      nic: eth1
      port: 9000                #服务监听端口 可使用占位符
      network: udp                             #网络监听类型  tcp udp
      protocol: oidb              #应用层协议 trpc http
      timeout: 5000                            #请求最长处理时间 单位 毫秒
    - name: trpc.wemeet.wemeet_template.http      #service的路由名称
      #ip: 127.0.0.1                            #服务监听ip地址 可使用占位符,ip和nic二选一，优先ip
      nic: eth1
      port: 9001                #服务监听端口 可使用占位符
      network: tcp                             #网络监听类型  tcp udp
      protocol: http              #应用层协议 trpc http
      timeout: 1000                            #请求最长处理时间 单位 毫秒
#    - name: trpc.wemeet.wemeet_template.timer       #service的路由名称
#      nic: eth1                                   #网卡 ipport随便填，主要用于分布式定时器的互斥
#      port: 9022                                #服务监听端口 可使用占位符
#      network: "0 */5 * * * *?startAtOnce=1"           #定时器cron表达式: [second minute hour day month weekday] 如 "0 */5 * * * *" 每隔5分钟
#      protocol: timer                        #应用层协议
#      timeout: 240000                         #请求最长处理时间 单位 毫秒


client:                                            #客户端调用的后端配置
  timeout: 1000                                    #针对所有后端的请求最长处理时间
  namespace: Development                            #针对所有后端的环境
  filter:                                          #针对所有后端调用函数前后的拦截器列表
    - logger    
    - cm
  service:                                         #针对单个后端的配置
    - name: trpc.wemeet.db_proxy.mysql_readonly
      timeout: 5000
      target: dsn://wemeet_info_full_rw:Kvm@8s39cmVd@tcp(30.46.165.144:3306)/wemeet_info?timeout=10s&charset=utf8&parseTime=true
    - name: trpc.kafka.producer.db_proxy
      target: kafka://${cicd_kafka_vip}:9092?topic=trpc_db_proxy_centerJoinNew_test_${env}&clientid=wemeet_template&partitioner=hash&compression=none
      timeout: 2000
    - name: trpc.wemeet.wemeet_template.oidb      #后端服务的service name
      namespace: Development                   #后端服务的环境
      network: tcp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: trpc               #应用层协议 trpc http
      target: ip://127.0.0.1:9000              #请求服务地址
      timeout: 1000                            #请求最长处理时间
    - name: trpc.wemeet.wemeet_template.http      #后端服务的service name
      namespace: Development                   #后端服务的环境
      network: tcp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: http               #应用层协议 trpc http
      target: ip://127.0.0.1:9001              #请求服务地址
      timeout: 1000                            #请求最长处理时间
    - name: trpc.wemeet.wemeet_template.redis_storage      #后端服务的service name
      namespace: Development                   #后端服务的环境
      network: tcp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: redis
      target: ip://9.223.75.153:6379
      password: addoil2020test
      timeout: 3000
    - name: trpc.wemeet.common_upload.common_upload_oidb      #后端服务的service name
      namespace: Development                   #后端服务的环境
      network: udp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: oidb
      target: polaris://trpc.wemeet.common_upload.oidb
      timeout: 1000
    - name: trpc.wemeet.wemeet_meet_sensitive.wemeet_meet_sensitive_oidb
      namespace: Development                   #后端服务的环境
      # namespace: Production
      # target: polaris://1904193:3670016
      target: cl5://1904193:3670016
      # target: polaris://trpc.wemeet.meet_sensitive.oidb
      network: udp
      protocol: oidb
      timeout: 3000
    - name: trpc.wemeet.wemeet_user_notify.wemeet_user_notify_oidb   #后端服务的service name
      namespace: Development                   #后端服务的环境
      network: udp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: oidb
      target: polaris://trpc.wemeet.wemeet_user_notify.oidb
      timeout: 2000
    - name: trpc.wemeet.common.message         #后端服务的service name
      network: tcp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: http                            #应用层协议 trpc http
      target: polaris://trpc.wemeet.msgbox.http            #请求服务地址
      timeout: 1000
    - name: trpc.wemeet.wemeet_safe_gateway.video_trpc    #后端服务的service name
      namespace: Development                   #后端服务的环境
      network: udp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: trpc
      target: polaris://trpc.wemeet.wemeet_safe_gateway.video_trpc
      timeout: 2000
    - name: trpc.wemeet.wemeet_cache_read.cache_trpc
      network: udp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: trpc                           #应用层协议 trpc http
      target: polaris://trpc.wemeet.wemeet_cache_read.cache_trpc
      timeout: 1000
    - name: trpc.wemeet.wemeet_cache_read.oversea_trpc
      network: udp                             #后端服务的网络类型 tcp udp 配置优先
      protocol: trpc                           #应用层协议 trpc http
      target: polaris://trpc.voov.wemeet_cache_read.cache_trpc
      timeout: 1000
    - name: trpc.wemeet.wemeet_safe_gate.safe_trpc
      network: udp                             #注意是udp
      protocol: trpc
      target: polaris://trpc.wemeet.wemeet_safe_gate.safe_trpc
      timeout: 1000
    - name: trpc.wemeet.wemeet_safe_gateway.image_trpc     # 图片送审接口
      network: udp                             #注意是udp
      protocol: trpc
      target: polaris://trpc.wemeet.wemeet_safe_gateway.safe_image_trpc
      timeout: 1000
    - name: trpc.tencent_meeting.common_service.role_auth_oidb
      target: polaris://trpc.wemeet.meeting_role_auth.oidb
      network: udp
      protocol: oidb
      timeout: 3000
    - name: trpc.wemeet.layout_center.oidb_layout_center
      network: udp
      protocol: oidb
      target: polaris://trpc.wemeet.layout_center.oidb
      timeout: 1000

plugins:                                          #插件配置
  selector:
    polaris:
      address_list: polaris-discover.oa.com:8090  #名字服务远程地址列表
      protocol: grpc                              #北极星交互协议支持 http，grpc，trpc
      log_dir: ./log/polaris/                    #北极星日志目录
      enable_servicerouter: true
  metrics:
    cm:
      app: wemeet
      service:  wemeet_template                 # 注意！！ 需修改，模块服务名 !!!
      agentIP: 127.0.0.1:8126                     # 固定值，sidecar注入（云监控agent端口为8126，注意和服务端口冲突）
      singleAttrMergeReport: false                 #是否单指标聚合，提前配置好，后续企业上报监控时需要使用此配置，当前cm版本>=1.20.0时一定要设置为true
    m007: #007 monitor
      reportInterval: 60000 #上报间隔[可选，默认为60000]
      namespace: Production #环境类型，分正式production和非正式development两种类型。[可选,未配置则与global.namespace一致]
    attr:                                            # monitor
      reportInterval: 1000
      reportMeta:
        ulsAppIdIsZero: 2804733                      # appid为0，不使用uls
        ulsAgentNotInstall: 2804734                  # uls没有安装logsys_cfg_cli
        ulsInitFailed: 2804735                       # uls初始化失败
        ulsLogTruncate: 3082648                      # uls超长截断
        ulsReport: 2804737                           # uls上报量
        ulsQueueFull: 2804738                        # uls队列已满
        # 以下为trpc runtime指标监控
        trpc.GoroutineNum: 35434813
        trpc.ThreadNum: 35434814
        trpc.GOMAXPROCSNum: 35434815
        trpc.CPUCoreNum: 35434816
        trpc.PauseNsLt100usTimes: 35434817
        trpc.PauseNs100_500usTimes: 35434818
        trpc.PauseNs500us_1msTimes: 35434819
        trpc.PauseNs1_10msTimes: 35434820
        trpc.PauseNs10_50msTimes: 35434821
        trpc.PauseNs50_100msTimes: 35434822
        trpc.PauseNs100_500msTimes: 35434823
        trpc.PauseNs500ms_1sTimes: 35434824
        trpc.PauseNsBt1sTimes: 35434825
        trpc.AllocMem_MB: 35434826
        trpc.SysMem_MB: 35434827
        trpc.NextGCMem_MB: 35434828
        trpc.PauseNs_us: 35434829
        trpc.GCCPUFraction_ppb: 35434830
        trpc.MaxFdNum: 35434831
        trpc.CurrentFdNum: 35434832
        trpc.PidNum: 35434833
        trpc.TcpNum: 35434834
        trpc.PanicNum: 35443938
  log:                                            #日志配置
    default:                                      #默认日志的配置，可支持多输出
      - writer: console                           #控制台标准输出 默认
        level: error                              #标准输出日志的级别
        formatter: json
        caller_skip: 2                            #默认日志深度是2，不填写是2，使用git.code.oa.com/phoenixs/trpc-log-meet/log，接口打印日志，启用该 log 调整为3
        formatter_config:
          time_key: Timestamp                     #日志时间字段名称，不填默认"T"
          level_key: Level                        #日志级别字段名称，不填默认"L"
          name_key: Name                          #日志名称字段名称， 不填默认"N"
          caller_key: Line                        #日志调用方字段名称， 不填默认"C"
          message_key: Message                    #日志消息体字段名称，不填默认"M"
          stacktrace_key: StackTrace              #日志堆栈字段名称， 不填默认"S"
      - writer: file                              #本地文件日志
        level: debug                               #本地文件滚动日志的级别
        formatter: json
        caller_skip: 2                            #默认日志深度是2，不填写是2，使用git.code.oa.com/phoenixs/trpc-log-meet/log，接口打印日志，启用该 log 调整为3
        formatter_config:
          time_key: Timestamp                     #日志时间字段名称，不填默认"T"
          level_key: Level                        #日志级别字段名称，不填默认"L"
          name_key: Name                          #日志名称字段名称， 不填默认"N"
          caller_key: Line                        #日志调用方字段名称， 不填默认"C"
          message_key: Message                    #日志消息体字段名称，不填默认"M"
          stacktrace_key: StackTrace              #日志堆栈字段名称， 不填默认"S"
        writer_config:
          filename:  ./logs/trpc.log                #本地文件滚动日志存放的路径，注意此处日志文件路径是 logs，不是 log!!!!!
          roll_type: size                           #文件滚动类型,size为按大小滚动
          max_age: 7                                #最大日志保留天数
          max_size: 10                              #本地文件滚动日志的大小 单位 MB
          max_backups: 10                           #最大日志文件数
          compress:  false                          #日志文件是否压缩
      - writer: atta               #atta远程日志输出
        level: info               #远程日志的级别
        remote_config:             #远程日志配置，业务自定义结构，每一种远程日志都有自己独立的配置
          atta_id: '03200050411'     #atta id 使用之前需要保证机器有安装atta agent
          atta_token: '2311826956'  #atta token
          time_key: time
          level_key: level
          name_key: name
          caller_key: caller
          stacktrace_key: stacktrace
          message_key: msg
          field:                   #申请atta id时，业务自己定义的表结构字段，顺序必须一致
            - traceId
            - serverName
            - serverRPCName
            - time
            - cost
            - level
            - stacktrace
            - caller
            - msg
            - seq
            - appId
            - appUid
            - meetId
  tracing:
    tjg:
      appid: TXHY_DEV
      service_name: trpc.wemeet.meeting_template
      local_port: 0
      sampler:
        type: mix
        mix:
          sample_rate: 1024
          min_speed_rate: 1
          max_speed_rate: 10
      reporter:
        type: atta
        atta:
          atta_id: '0af00000141'
          atta_token: '7913895459'
          log_atta_id: '0c000006190'
          log_atta_token: '9155347633'
  logger:
    wemeet:
      debug: true
      request:
        - name: all  #默认配置
          switch: true  #默认为 true，表示打印所有的请求参数。
        - name: trpc.wemeet.cls_test_source.ClsTestSourceOidb #此处为自己想过滤的不打印请求参数的服务，服务为自己本身的服务。此物为业务自身调用的服务，此物为业务自身调用的服务，此物为业务自身调用的服务
          switch: false  #false，表示此类请求不打印请求参数
      response:
        - name: all
          switch: true #默认为 true，表示打印所有接口的的返回参数。
        - name: trpc.wemeet.cls_test_source.ClsTestSourceHttp  #此处为自己想过滤的不打印返回数据的服务，服务为自己本身的服务。此物为业务自身调用的服务，此物为业务自身调用的服务，此物为业务自身调用的服务
          switch: false  #配置为 false，表示该服务不打印返回参数。
      rpc:
        - name: all
          switch: true #默认为 true，表示打印RPC 调用的请求以及返回信息
        - name: trpc.wemeet.cls_test_one.ClsTestOneOidb  #此处为调用的 RPC 服务，配置名称与 Client 处的 service：name 的配置保持一致，支持配置 redis 以及 MySQL 的配置。此物为业务自身调用的服务，此物为业务自身调用的服务，此物为业务自身调用的服务
          switch: false
